import os
from config import bq_migration_config
import utils
from google.cloud import bigquery
from google.cloud import storage
import yaml

# Transpilation
# Gather required configurations

def main():
    gcp_project = config.bq_migration_config['project']
    utils.update_default_database(default_database=gcp_project,
                                  dwh_config_path=bq_migration_config['dwh_config'])

    os.system(f'''
    export BQMS_PROJECT={config.bq_migration_config['project']};
    export BQMS_PREPROCESSED_PATH={config.bq_migration_config['preprocess']};
    export BQMS_INPUT_PATH={config.bq_migration_config['input']};
    export BQMS_TRANSLATED_PATH={config.bq_migration_config['translated']};
    export BQMS_POSTPROCESSED_PATH={config.bq_migration_config['postprocessed']};
    export BQMS_CONFIG_PATH={config.bq_migration_config['dwh_config']};
    bqms-run
    ''')
    #export BQMS_MACRO_MAPPING={};
    #export BQMS_OBJECT_NAME_MAPPING_PATH={};
    #export BQMS_MULTITHREAD=True;
    #export BQMS_GCS_CHECKS=False;
    #export BQMS_VERBOSE=True;

if __name__ == "__main__":
    main()

# Dryrun
# Parse through output and dryrun all transpiled SQL


# Git integration
# Create branch
# Commit and start PR
